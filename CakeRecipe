Josue Vidal
21:18
1- Criar o Resource Group az aks create --resource-group myResourceGroup --name myAKSCluster --generate-ssh-keys 
2- Criar o AKS az aks create --resource-group myResourceGroup --name myAKSCluster --generate-ssh-keys 
3- Conectar no Cluster AKS az aks get-credentials --resource-group myResourceGroup --name myAKSCluster 
4- Deploy da Aplicaçao kubectl create ns pets kubectl apply -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-all-in-one.yaml -n pets 
5-Validaçao da Aplicação Frontend http://48.223.223.168/ Admin http://134.33.242.224/ 
6 - Cria o Azure OpenAI Get- https://imersaocloudexpert.openai.azure.com 
7- Criar a Microservices de AI kubectl apply -f ai-service.yaml

#Passo a Passo

Registrar o Provedor de Recursos:
Usando o Portal do Azure:

Acesse o portal do Azure.
Navegue até "Assinaturas".
Selecione a assinatura que você está usando.
No menu à esquerda, clique em "Provedores de recursos".
Procure por Microsoft.ContainerRegistry e clique no botão "Registrar".
Usando o Azure CLI:

Se preferir usar a linha de comando, execute o seguinte comando:
Bash

       az provider register --namespace Microsoft.ContainerRegistry
       
Verificar o Registro:
Após registrar, você pode verificar se o registro foi bem-sucedido verificando o status na seção "Provedores de recursos" do portal do Azure ou usando o Azure CLI:
Bash

     az provider show --namespace Microsoft.ContainerRegistry
     ##Automatização #
{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "registryName": {
            "type": "string"
        },
        "registryLocation": {
            "type": "string"
        },
        "zoneRedundancy": {
            "type": "string"
        },
        "registrySku": {
            "type": "string"
        },
        "registryApiVersion": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "publicNetworkAccess": {
            "type": "string"
        },
        "autoGeneratedDomainNameLabelScope": {
            "type": "string"
        },
        "roleAssignmentMode": {
            "type": "string"
        }
    },
    "resources": [
        {
            "name": "[parameters('registryName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "location": "[parameters('registryLocation')]",
            "apiVersion": "[parameters('registryApiVersion')]",
            "sku": {
                "name": "[parameters('registrySku')]"
            },
            "dependsOn": [],
            "tags": "[parameters('tags')]",
            "properties": {
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "zoneRedundancy": "[parameters('zoneRedundancy')]",
                "autoGeneratedDomainNameLabelScope": "[parameters('autoGeneratedDomainNameLabelScope')]",
                "roleAssignmentMode": "[parameters('roleAssignmentMode')]"
            }
        }
    ],
    "outputs": {}
} 
#fim automatização
